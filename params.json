{"name":"Pastyclient-node","body":"pastyclient-node\r\n================\r\n\r\n Module to build your own [Pasty](http://www.pastyapp.org/) client.\r\n\r\n More information at http://www.pastyapp.org/  \r\n\r\n![Pasty Logo](http://pastyapp.org/images/Pasty_256x256.png)\r\n\r\nInstallation\r\n------------\r\n### Installing npm (node package manager)  \r\n`curl http://npmjs.org/install.sh | sh`  \r\n### Installing pastyclient-node\r\n`npm install pastyclient-node`\r\n### Installing pastyclient-node globally\r\n`[sudo] npm install -g pastyclient-node`\r\n\r\n\r\nHow to use\r\n----------\r\n\r\n pastyclient-node is a small library that will handle the REST calls to the [Pasty REST API server](https://github.com/ElectricDynamite/pasty-server) for you.\r\n Currently it does not offer any option to store user credentials withing the client library, so you need to store these within your application and provide\r\n them upon each REST call.  \r\n\r\n While pastyclient-node will take care of the REST calls, you should still be familiar with [Pasty's REST API](https://github.com/ElectricDynamite/pasty-server/wiki/REST-API).\r\n\r\n### General\r\n You always need to create your pastyclient by requiring the module and calling the pastyclient factory `pastyclient()`:\r\n```js\r\nvar client = require('pastyclient-node').pastyclient(\r\n    'api.pastyapp.org'\r\n  , 443\r\n  , { \"ssl\": true });\r\n``` \r\n The factory take three arguments. The first argument is the REST servers `hostname`, the second is the REST servers TCP `port`.  \r\n The third argument is an `options` object, that currently takes any of the following values:  \r\n  * \"ssl\": A boolean indicating whether or not the server will talk SSL/TLS.\r\n  * \"apiKey\": If you have an API key for the REST server (in order to create users) you can specify it here as a string.\r\n\r\n After creating receiving your configured client from the factory, you can start using it. Keep your Pasty login data at hand.\r\n\r\n### Getting the user clipboard\r\n\r\n```js\r\nvar client = require('pastyclient-node').pastyclient(\r\n    'api.pastyapp.org'\r\n  , 443\r\n  , { \"ssl\": true });\r\nvar username = '<username>';\r\nvar password = '<password>';\r\n\r\n// call the REST server for the users clipboard\r\nclient.listItems(username, password, function(E,items) {\r\n  if(E === null) {  // if no error occured\r\n    console.dir(items);  // dump the items to console\r\n  } else {\r\n    console.log(\"Error:\");\r\n    console.dir(E); // display any error\r\n  }\r\n});\r\n``` \r\n\r\n### Adding an item to the user clipboard\r\n\r\n```js\r\nvar client = require('pastyclient-node').pastyclient(\r\n    'api.pastyapp.org'\r\n  , 443\r\n  , { \"ssl\": true });\r\nvar username = '<username>';\r\nvar password = '<password>';\r\n\r\nvar item = \"what a pretty string this is\";\r\n\r\n// call the REST server to add the item\r\nclient.addItem(item, username, password, function(E, itemId) {\r\n  if(E === null) {  // if no error occured\r\n    console.log(itemId);  // dump the newly created items id to console\r\n  } else {\r\n    console.log(\"Error:\");\r\n    console.dir(E); // display any error\r\n  }\r\n});\r\n``` \r\n\r\n### Deleting an item from the user clipboard\r\n\r\n```js\r\nvar client = require('pastyclient-node').pastyclient(\r\n    'api.pastyapp.org'\r\n  , 443\r\n  , { \"ssl\": true });\r\nvar username = '<username>';\r\nvar password = '<password>';\r\n\r\nvar itemId = \"4fc660923120c0790e000002\";\r\n\r\n// call the REST server to delete the item with id <itemId>\r\nclient.deleteItem(itemId, username, password, function(E, success) {\r\n  if(E === null) {  // if no error occured\r\n    console.log(success);  // success will contain true\r\n  } else {\r\n    console.log(\"Error:\");\r\n    console.dir(E); // display any error\r\n  }\r\n});\r\n```\r\n### Requesting a user token\r\n Since the [Pasty REST API](https://github.com/ElectricDynamite/pasty-server/wiki/REST-API) \r\n does currently not support OAuth, there is a miserable work around to keep from\r\n sending the users credentials over the Internet all the time, and that is user tokens.\r\n\r\n You can request a user token using the `requestToken()` function, and then use this\r\n token instead of username / password in future clipboard calls. To do that, you \r\n simply replace the username and the password parameter with a single string parameter\r\n containing the token.\r\n\r\n Here is an example:\r\n```js\r\nvar client = require('pastyclient-node').pastyclient(\r\n    'api.pastyapp.org'\r\n  , 443\r\n  , { \"ssl\": true });\r\nvar username = '<username>';\r\nvar password = '<password>';\r\n\r\nvar item = \"what a pretty string this is\";\r\n\r\n// call the REST server to request a user token\r\nclient.requestToken(username, password, function(E, tokenInfo) {\r\n  if(E === null) {  // if no error occured\r\n    console.dir(tokenInfo); // let's see how the token info looks\r\n    \r\n    // call the REST server to add the item\r\n    client.addItem(item, tokenInfo.token, function(E, itemId) {\r\n      if(E === null) {  // if no error occured\r\n        console.log(itemId);  // dump the newly created items id to console\r\n      } else {\r\n        console.log(\"Error:\");\r\n        console.dir(E); // display any error\r\n      }\r\n    });\r\n  } else {\r\n    console.log(\"Error:\");\r\n    console.dir(E); // display any error\r\n  }\r\n});\r\n\r\n``` \r\n\r\n### More\r\n There is more that you can do with the library and Pasty. Please have a look \r\n into the source code, for the following function calls:\r\n  \r\n  * getServerVersion()\r\n  * getItem()\r\n  * getUser()\r\n  * createUser()\r\n  * updateUserPassword()\r\n  * deleteUser()\r\n  * checkTokenValidity()\r\n\r\n\r\n They are pretty straight forward and fairly documented.\r\n \r\n\r\nContact\r\n-------\r\n Please direct your questions and suggestions to electricdynamite.apps@gmail.com\r\n\r\n\r\nLicense\r\n-------\r\n Copyright 2012 Philipp Geschke\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n \r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n","tagline":"npm module to build your own Pasty client","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}